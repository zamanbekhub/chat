basePath: /chat
definitions:
  model.Chat:
    properties:
      chat_id:
        type: integer
      description:
        type: string
      name:
        type: string
      type_code:
        $ref: '#/definitions/model.ChatTypeCode'
    type: object
  model.ChatTypeCode:
    enum:
    - personal
    - group
    - channel
    type: string
    x-enum-varnames:
    - CHAT_TYPE_CODE_PERSONAL
    - CHAT_TYPE_CODE_GROUP
    - CHAT_TYPE_CODE_CHANNEL
  schema.ChatCreate:
    properties:
      description:
        type: string
      name:
        type: string
      type_code:
        $ref: '#/definitions/model.ChatTypeCode'
    required:
    - type_code
    type: object
  schema.Empty:
    type: object
  schema.MessagePush:
    properties:
      channel:
        type: string
      message:
        type: string
    type: object
  schema.Response-model_Chat:
    properties:
      message:
        type: string
      result:
        $ref: '#/definitions/model.Chat'
      status:
        type: boolean
    type: object
  schema.Response-schema_Empty:
    properties:
      message:
        type: string
      result:
        $ref: '#/definitions/schema.Empty'
      status:
        type: boolean
    type: object
host: 127.0.0.1:8000
info:
  contact: {}
  description: chat
  title: chat
paths:
  /api/v1/chat:
    get:
      consumes:
      - application/json
      parameters:
      - description: Chat ID
        in: query
        name: chat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Response-model_Chat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.Response-schema_Empty'
      summary: Получить всех пользователей
      tags:
      - chat
    post:
      consumes:
      - application/json
      parameters:
      - description: Создание пользователыя
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schema.ChatCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Response-model_Chat'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.Response-schema_Empty'
      summary: Создание пользователя
      tags:
      - chat
  /api/v1/message/push:
    post:
      consumes:
      - application/json
      parameters:
      - description: Новое сообщение
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/schema.MessagePush'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Response-schema_Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.Response-schema_Empty'
      summary: Новое сообщение
      tags:
      - message
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
